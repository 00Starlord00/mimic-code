-- ----------------------------------------------------------------
--
-- This is a script to load the MIMIC-III data into MySQL.
-- Version of September 1, 2015, by Peter Szolovits (psz@mit.edu)
--
-- It is derived from a modification of the scripts at
-- https://github.com/MIT-LCP/mimic-code/tree/master/buildmimic/postgres
--
-- The commented-out DROP and CREATE statements are heuristic estimates of the appropriate
-- data types computed by scanning the data in the tables.  These are NOT the actual table
-- definitions, which are instead drawn from the MIMIC-III release.  The LOAD DATA statement
-- are, nevertheless, computed by this same heuristic process.  The only interesting aspects are:
--  1. Empty strings in the .csv files are translated to NULL values in the data; note that in
--     the Oracle exports, some of these are of the form ...,,... and others ...,"",... .
--     We make no distinction.
--  2. The Oracle TIMESTAMP fields are defined as DATETIME.  MySQL's TIMESTAMP data type has a
--     range too small to hold the MIMIC data.
--
-- Number of rows in each table of MIMIC-III import to MySQL:
-- 58976	ADMISSIONS
-- 34499	CALLOUT
-- 8221		CAREGIVERS
-- 257495071	CHARTEVENTS
-- 573146	CPTEVENTS
-- 4486049	DATETIMEEVENTS
-- 651047	DIAGNOSES_ICD
-- 125557	DRGCODES
-- 134		D_CPT
-- 14567	D_ICD_DIAGNOSES
-- 3882		D_ICD_PROCEDURES
-- 15492	D_ITEMS
-- 755		D_LABITEMS
-- 61532	ICUSTAYS
-- 25889251	IOEVENTS
-- 27872575	LABEVENTS
-- 328446	MICROBIOLOGYEVENTS
-- 2426959	NOTEEVENTS
-- 46520	PATIENTS
-- 4156848	PRESCRIPTIONS
-- 240095	PROCEDURES_ICD
-- 73343	SERVICES
-- 261897	TRANSFERS
-- ----------------------------------------------------------------

-- ----------------------------------------------------------------
-- Create the database schema
-- ----------------------------------------------------------------
  DROP SCHEMA IF EXISTS
  CREATE SCHEMA default character set UTF8;

  -- The below command defines the schema where all tables are created
  USE MIMICIII;


-- --------------------------------------------------------
--  DDL for Table ADMISSIONS
-- --------------------------------------------------------

  CREATE TABLE ADMISSIONS
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	ADMITTIME DATETIME,
	DISCHTIME DATETIME,
	DEATHTIME DATETIME,
	ADMISSION_TYPE VARCHAR(50),
	ADMISSION_LOCATION VARCHAR(50),
	DISCHARGE_LOCATION VARCHAR(50),
	INSURANCE VARCHAR(255),
	LANGUAGE VARCHAR(10),
	RELIGION VARCHAR(50),
	MARITAL_STATUS VARCHAR(50),
	ETHNICITY VARCHAR(200),
	DIAGNOSIS VARCHAR(255),
        HAS_IOEVENTS_DATA SMALLINT,
        HAS_CHARTEVENTS_DATA SMALLINT
   ) ;

-- --------------------------------------------------------
--  DDL for Table CALLOUT
-- --------------------------------------------------------

CREATE TABLE CALLOUT
    (   ROW_ID INT,
        SUBJECT_ID INT,
        HADM_ID INT,
        SUBMIT_WARDID INT,
        SUBMIT_CAREUNIT VARCHAR(15),
        CURR_WARDID INT,
        CURR_CAREUNIT VARCHAR(15),
        CALLOUT_WARDID INT,
        CALLOUT_SERVICE VARCHAR(10),
        REQUEST_TELE SMALLINT,
        REQUEST_RESP SMALLINT,
        REQUEST_CDIFF SMALLINT,
        REQUEST_MRSA SMALLINT,
        REQUEST_VRE SMALLINT,
        CALLOUT_STATUS VARCHAR(20),
        CALLOUT_OUTCOME VARCHAR(20),
        DISCHARGE_WARDID INT,
        ACKNOWLEDGE_STATUS VARCHAR(20),
        CREATETIME DATETIME,
        UPDATETIME DATETIME,
        ACKNOWLEDGETIME DATETIME,
        OUTCOMETIME DATETIME,
        FIRSTRESERVATIONTIME DATETIME,
        CURRENTRESERVATIONTIME DATETIME
        );

-- --------------------------------------------------------
--  DDL for Table CAREGIVERS
-- --------------------------------------------------------

  CREATE TABLE CAREGIVERS
   (	ROW_ID INT,
	CGID INT,
	LABEL VARCHAR(15),
	DESCRIPTION VARCHAR(30)
   ) ;

-- --------------------------------------------------------
--  DDL for Table CHARTEVENTS
-- --------------------------------------------------------

  CREATE TABLE CHARTEVENTS
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	ICUSTAY_ID INT,
	ITEMID INT,
	CHARTTIME DATETIME,
	STORETIME DATETIME,
	CGID INT,
	VALUE VARCHAR(255),
	VALUENUM DOUBLE PRECISION,
	UOM VARCHAR(50),
	WARNING INT,
	ERROR INT,
	RESULTSTATUS VARCHAR(50),
	STOPPED VARCHAR(50)
   ) ;

-- --------------------------------------------------------
--  DDL for Table CPTEVENTS
-- --------------------------------------------------------

  CREATE TABLE CPTEVENTS
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	COSTCENTER VARCHAR(10),
	CHARTDATE DATETIME,
	CPT_CD VARCHAR(10),
	CPT_NUMBER INT,
	CPT_SUFFIX VARCHAR(5),
	TICKET_ID_SEQ INT,
	SECTIONHEADER VARCHAR(50),
	SUBSECTIONHEADER VARCHAR(255),
	DESCRIPTION VARCHAR(200)
   ) ;

-- --------------------------------------------------------
--  DDL for Table DATETIMEEVENTS
-- --------------------------------------------------------

  CREATE TABLE DATETIMEEVENTS
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	ICUSTAY_ID INT,
	ITEMID INT,
	CHARTTIME DATETIME,
	STORETIME DATETIME,
	CGID INT,
	VALUE DATETIME,
	UOM VARCHAR(50),
	WARNING SMALLINT,
	ERROR SMALLINT,
	RESULTSTATUS VARCHAR(50),
	STOPPED VARCHAR(50)
   ) ;

-- --------------------------------------------------------
--  DDL for Table DIAGNOSES_ICD
-- --------------------------------------------------------

  CREATE TABLE DIAGNOSES_ICD
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	SEQ_NUM INT,
	ICD9_CODE VARCHAR(20)
   ) ;

-- --------------------------------------------------------
--  DDL for Table DRGCODES
-- --------------------------------------------------------

  CREATE TABLE DRGCODES
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	DRG_TYPE VARCHAR(20),
	DRG_CODE VARCHAR(20),
	DESCRIPTION VARCHAR(255),
	DRG_SEVERITY SMALLINT,
	DRG_MORTALITY SMALLINT
   ) ;

-- --------------------------------------------------------
--  DDL for Table D_CPT
-- --------------------------------------------------------

  CREATE TABLE D_CPT
   (	ROW_ID INT,
	CATEGORY SMALLINT,
	SECTIONRANGE VARCHAR(100),
	SECTIONHEADER VARCHAR(50),
	SUBSECTIONRANGE VARCHAR(100),
	SUBSECTIONHEADER VARCHAR(255),
	CODESUFFIX VARCHAR(5),
	MINCODEINSUBSECTION INT,
	MAXCODEINSUBSECTION INT
   ) ;

-- --------------------------------------------------------
--  DDL for Table D_ICD_DIAGNOSES
-- --------------------------------------------------------

  CREATE TABLE D_ICD_DIAGNOSES
   (	ROW_ID INT,
	ICD9_CODE VARCHAR(10),
	SHORT_TITLE VARCHAR(50),
	LONG_TITLE VARCHAR(255)
   ) ;

-- --------------------------------------------------------
--  DDL for Table D_ICD_PROCEDURES
-- --------------------------------------------------------

  CREATE TABLE D_ICD_PROCEDURES
   (	ROW_ID INT,
	ICD9_CODE VARCHAR(10),
	SHORT_TITLE VARCHAR(50),
	LONG_TITLE VARCHAR(255)
   ) ;

-- --------------------------------------------------------
--  DDL for Table D_ITEMS
-- --------------------------------------------------------

  CREATE TABLE D_ITEMS
   (	ROW_ID INT,
	ITEMID INT,
	LABEL VARCHAR(200),
	ABBREVIATION VARCHAR(100),
	DBSOURCE VARCHAR(20),
	LINKSTO VARCHAR(50),
	CATEGORY VARCHAR(100),
	UNITNAME VARCHAR(100),
	PARAM_TYPE VARCHAR(30),
	LOWNORMALVALUE DOUBLE PRECISION,
	HIGHNORMALVALUE DOUBLE PRECISION,
  CONCEPTID INT
   ) ;

-- --------------------------------------------------------
--  DDL for Table D_LABITEMS
-- --------------------------------------------------------

  CREATE TABLE D_LABITEMS
   (	ROW_ID INT,
	ITEMID INT,
	LABEL VARCHAR(100),
	FLUID VARCHAR(100),
	CATEGORY VARCHAR(100),
	LOINC_CODE VARCHAR(100)
   ) ;

-- --------------------------------------------------------
--  DDL for Table ICUSTAYS
-- --------------------------------------------------------

  CREATE TABLE ICUSTAYS
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	ICUSTAY_ID INT,
	DBSOURCE VARCHAR(20),
	FIRST_CAREUNIT VARCHAR(20),
	LAST_CAREUNIT VARCHAR(20),
	FIRST_WARDID SMALLINT,
	LAST_WARDID SMALLINT,
	INTIME DATETIME,
	OUTTIME DATETIME,
	LOS DOUBLE PRECISION,
   ) ;

-- --------------------------------------------------------
--  DDL for Table INPUTEVENTS_CV
-- --------------------------------------------------------

  CREATE TABLE INPUTEVENTS_CV
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	ICUSTAY_ID INT,
	CHARTTIME DATETIME,
	ITEMID INT,
	AMOUNT DOUBLE PRECISION,
	AMOUNTUOM VARCHAR(30),
	RATE DOUBLE PRECISION,
	RATEUOM VARCHAR(30),
	STORETIME DATETIME,
	CGID INT,
	ORDERID INT,
	LINKORDERID INT,
	STOPPED VARCHAR(30),
	NEWBOTTLE INT,
	ORIGINALAMOUNT DOUBLE PRECISION,
	ORIGINALAMOUNTUOM VARCHAR(30),
	ORIGINALROUTE VARCHAR(30),
	ORIGINALRATE DOUBLE PRECISION,
	ORIGINALRATEUOM VARCHAR(30),
	ORIGINALSITE VARCHAR(30)
   ) ;


 -- --------------------------------------------------------
 --  DDL for Table INPUTEVENTS_MV
 -- --------------------------------------------------------

   CREATE TABLE INPUTEVENTS_MV
    (	ROW_ID INT,
 	SUBJECT_ID INT,
 	HADM_ID INT,
 	ICUSTAY_ID INT,
 	STARTTIME DATETIME,
 	ENDTIME DATETIME,
 	ITEMID INT,
 	AMOUNT DOUBLE PRECISION,
 	AMOUNTUOM VARCHAR(30),
 	RATE DOUBLE PRECISION,
 	RATEUOM VARCHAR(30),
 	STORETIME DATETIME,
 	CGID INT,
 	ORDERID INT,
 	LINKORDERID INT,
 	ORDERCATEGORYNAME VARCHAR(100),
 	SECONDARYORDERCATEGORYNAME VARCHAR(100),
 	ORDERCOMPONENTTYPEDESCRIPTION VARCHAR(200),
 	ORDERCATEGORYDESCRIPTION VARCHAR(50),
 	PATIENTWEIGHT DOUBLE PRECISION,
 	TOTALAMOUNT DOUBLE PRECISION,
 	TOTALAMOUNTEUOM VARCHAR(50),
 	ISOPENBAG SMALLINT,
 	CONTINUEINNEXTDEPT SMALLINT,
 	CANCELREASON SMALLINT,
 	STATUSDESCRIPTION VARCHAR(30),
 	COMMENTS_EDITEDBY VARCHAR(30),
 	COMMENTS_CANCELEDBY VARCHAR(100),
 	COMMENTS_DATE DATETIME,
 	ORIGINALAMOUNT DOUBLE PRECISION,
 	ORIGINALRATE DOUBLE PRECISION
    ) ;


-- --------------------------------------------------------
--  DDL for Table LABEVENTS
-- --------------------------------------------------------

  CREATE TABLE LABEVENTS
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	ITEMID INT,
	CHARTTIME DATETIME,
	VALUE VARCHAR(200),
	VALUENUM DOUBLE PRECISION,
	UOM VARCHAR(20),
	FLAG VARCHAR(20)
   ) ;

-- --------------------------------------------------------
--  DDL for Table MICROBIOLOGYEVENTS
-- --------------------------------------------------------

  CREATE TABLE MICROBIOLOGYEVENTS
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	CHARTDATE DATETIME,
	CHARTTIME DATETIME,
	SPEC_ITEMID INT,
	SPEC_TYPE_CD VARCHAR(10),
	SPEC_TYPE_DESC VARCHAR(100),
	ORG_ITEMID INT,
	ORG_CD INT,
	ORG_NAME VARCHAR(100),
	ISOLATE_NUM SMALLINT,
	AB_ITEMID INT,
	AB_CD INT,
	AB_NAME VARCHAR(30),
	DILUTION_TEXT VARCHAR(10),
	DILUTION_COMPARISON VARCHAR(20),
	DILUTION_VALUE DOUBLE PRECISION,
	INTERPRETATION VARCHAR(5)
   ) ;

-- --------------------------------------------------------
--  DDL for Table NOTEEVENTS
-- --------------------------------------------------------

  CREATE TABLE NOTEEVENTS
   (	ROW_ID INT,
	RECORD_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	CHARTDATE DATETIME,
	CHARTTIME DATETIME,
	STORETIME DATETIME,
	CATEGORY VARCHAR(50),
	DESCRIPTION VARCHAR(255),
	CGID INT,
	ISERROR CHAR(1),
	TEXT TEXT
   ) ;



-- --------------------------------------------------------
--  DDL for Table OUTPUTEVENTS
-- --------------------------------------------------------

 CREATE TABLE OUTPUTEVENTS
  (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	ICUSTAY_ID INT,
	CHARTTIME DATETIME,
	ITEMID INT,
	VALUE DOUBLE PRECISION,
	VALUEUOM VARCHAR(30),
	STORETIME DATETIME,
	CGID INT,
	STOPPED VARCHAR(30),
	NEWBOTTLE INT,
	ISERROR INT
  ) ;

-- --------------------------------------------------------
--  DDL for Table PATIENTS
-- --------------------------------------------------------

  CREATE TABLE PATIENTS
   (	ROW_ID INT,
	SUBJECT_ID INT,
	GENDER VARCHAR(5),
	DOB DATETIME,
	DOD DATETIME,
	DOD_HOSP DATETIME,
	DOD_SSN DATETIME,
	HOSPITAL_EXPIRE_FLAG VARCHAR(5)
   ) ;

-- --------------------------------------------------------
--  DDL for Table PRESCRIPTIONS
-- --------------------------------------------------------

  CREATE TABLE PRESCRIPTIONS
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	ICUSTAY_ID INT,
	STARTDATE DATETIME,
	ENDDATE DATETIME,
	DRUG_TYPE VARCHAR(100),
	DRUG VARCHAR(100),
	DRUG_NAME_POE VARCHAR(100),
	DRUG_NAME_GENERIC VARCHAR(100),
	FORMULARY_DRUG_CD VARCHAR(120),
	GSN VARCHAR(200),
	NDC VARCHAR(120),
	PROD_STRENGTH VARCHAR(120),
	DOSE_VAL_RX VARCHAR(120),
	DOSE_UNIT_RX VARCHAR(120),
	FORM_VAL_DISP VARCHAR(120),
	FORM_UNIT_DISP VARCHAR(120),
	ROUTE VARCHAR(120)
   ) ;


--------------------------------------------------------
--  DDL for Table PROCEDUREEVENTS_MV
--------------------------------------------------------


 CREATE TABLE PROCEDUREEVENTS_MV
  (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT
	ICUSTAY_ID INT,
	STARTTIME DATETIME,
	ENDTIME DATETIME,
	ITEMID INT,
	VALUE DOUBLE PRECISION,
	VALUEUOM VARCHAR(30),
	LOCATION VARCHAR(30),
	LOCATIONCATEGORY VARCHAR(30),
	STORETIME DATETIME,
	CGID INT,
	ORDERID INT,
	LINKORDERID INT,
	ORDERCATEGORYNAME VARCHAR(100),
	SECONDARYORDERCATEGORYNAME VARCHAR(100),
	ORDERCATEGORYDESCRIPTION VARCHAR(50),
	ISOPENBAG SMALLINT,
	CONTINUEINNEXTDEPT SMALLINT,
	CANCELREASON SMALLINT,
	STATUSDESCRIPTION VARCHAR(30),
	COMMENTS_EDITEDBY VARCHAR(30),
	COMMENTS_CANCELEDBY VARCHAR(30),
	COMMENTS_DATE DATETIME
  ) ;

-- --------------------------------------------------------
--  DDL for Table PROCEDURES_ICD
-- --------------------------------------------------------

  CREATE TABLE PROCEDURES_ICD
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	SEQ_NUM INT,
	ICD9_CODE VARCHAR(20)
   ) ;

-- --------------------------------------------------------
--  DDL for Table SERVICES
-- --------------------------------------------------------

  CREATE TABLE SERVICES
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	TRANSFERTIME DATETIME,
	PREV_SERVICE VARCHAR(20),
	CURR_SERVICE VARCHAR(20)
   ) ;

-- --------------------------------------------------------
--  DDL for Table TRANSFERS
-- --------------------------------------------------------

  CREATE TABLE TRANSFERS
   (	ROW_ID INT,
	SUBJECT_ID INT,
	HADM_ID INT,
	ICUSTAY_ID INT,
	DBSOURCE VARCHAR(20),
	EVENTTYPE VARCHAR(20),
	PREV_CAREUNIT VARCHAR(20),
	CURR_CAREUNIT VARCHAR(20),
	PREV_WARDID SMALLINT,
	CURR_WARDID SMALLINT,
	INTIME DATETIME,
	OUTTIME DATETIME,
	LOS DOUBLE PRECISION
   ) ;

-- ********************************************************
-- --------------------------------------------------------
--
-- Heuristic table definitions and LOAD DATA statements
--
-- --------------------------------------------------------

-- DROP TABLE IF EXISTS ADMISSIONS;
-- CREATE TABLE ADMISSIONS (
--    ROW_ID SMALLINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED NOT NULL,
--    ADMITTIME DATETIME NOT NULL,
--    DISCHTIME DATETIME NOT NULL,
--    DEATHTIME DATETIME,
--    ADMISSION_TYPE VARCHAR(255) NOT NULL,
--    ADMISSION_LOCATION VARCHAR(255) NOT NULL,
--    DISCHARGE_LOCATION VARCHAR(255) NOT NULL,
--    INSURANCE VARCHAR(255) NOT NULL,
--    LANGUAGE VARCHAR(255),
--    RELIGION VARCHAR(255),
--    MARITAL_STATUS VARCHAR(255),
--    ETHNICITY VARCHAR(255) NOT NULL,
--    DIAGNOSIS VARCHAR(255));

LOAD DATA LOCAL INFILE 'ADMISSIONS_DATA_TABLE.csv' INTO TABLE ADMISSIONS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@ADMITTIME,@DISCHTIME,@DEATHTIME,@ADMISSION_TYPE,@ADMISSION_LOCATION,@DISCHARGE_LOCATION,@INSURANCE,@LANGUAGE,@RELIGION,@MARITAL_STATUS,@ETHNICITY,@DIAGNOSIS,@HAS_IOEVENTS_DATA,@HAS_CHARTEVENTS_DATA)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = @HADM_ID,
   ADMITTIME = @ADMITTIME,
   DISCHTIME = @DISCHTIME,
   DEATHTIME = IF(@DEATHTIME='', NULL, @DEATHTIME),
   ADMISSION_TYPE = @ADMISSION_TYPE,
   ADMISSION_LOCATION = @ADMISSION_LOCATION,
   DISCHARGE_LOCATION = @DISCHARGE_LOCATION,
   INSURANCE = @INSURANCE,
   LANGUAGE = IF(@LANGUAGE='', NULL, @LANGUAGE),
   RELIGION = IF(@RELIGION='', NULL, @RELIGION),
   MARITAL_STATUS = IF(@MARITAL_STATUS='', NULL, @MARITAL_STATUS),
   ETHNICITY = @ETHNICITY,
   DIAGNOSIS = IF(@DIAGNOSIS='', NULL, @DIAGNOSIS),
   HAS_IOEVENTS_DATA = @HAS_IOEVENTS_DATA,
   HAS_CHARTEVENTS_DATA = @HAS_CHARTEVENTS_DATA;

-- DROP TABLE IF EXISTS CALLOUT;
-- CREATE TABLE CALLOUT_DATA_TABLE (
--    ROW_ID SMALLINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBMIT_WARDID TINYINT UNSIGNED,
--    SUBMIT_CAREUNIT VARCHAR(255),
--    CURR_WARDID TINYINT UNSIGNED,
--    CURR_CAREUNIT VARCHAR(255),
--    CALLOUT_WARDID TINYINT UNSIGNED NOT NULL,
--    CALLOUT_SERVICE VARCHAR(255) NOT NULL,
--    REQUEST_TELE TINYINT UNSIGNED NOT NULL,
--    REQUEST_RESP TINYINT UNSIGNED NOT NULL,
--    REQUEST_CDIFF TINYINT UNSIGNED NOT NULL,
--    REQUEST_MRSA TINYINT UNSIGNED NOT NULL,
--    REQUEST_VRE TINYINT UNSIGNED NOT NULL,
--    CALLOUT_STATUS VARCHAR(255) NOT NULL,
--    CALLOUT_OUTCOME VARCHAR(255) NOT NULL,
--    DISCHARGE_WARDID TINYINT UNSIGNED,
--    ACKNOWLEDGE_STATUS VARCHAR(255) NOT NULL,
--    CREATETIME DATETIME NOT NULL,
--    UPDATETIME DATETIME NOT NULL,
--    ACKNOWLEDGETIME DATETIME,
--    OUTCOMETIME DATETIME NOT NULL,
--    FIRSTRESERVATIONTIME DATETIME,
--    CURRENTRESERVATIONTIME DATETIME);

LOAD DATA LOCAL INFILE 'CALLOUT_DATA_TABLE.csv' INTO TABLE CALLOUT
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@SUBMIT_WARDID,@SUBMIT_CAREUNIT,@CURR_WARDID,@CURR_CAREUNIT,@CALLOUT_WARDID,@CALLOUT_SERVICE,@REQUEST_TELE,@REQUEST_RESP,@REQUEST_CDIFF,@REQUEST_MRSA,@REQUEST_VRE,@CALLOUT_STATUS,@CALLOUT_OUTCOME,@DISCHARGE_WARDID,@ACKNOWLEDGE_STATUS,@CREATETIME,@UPDATETIME,@ACKNOWLEDGETIME,@OUTCOMETIME,@FIRSTRESERVATIONTIME,@CURRENTRESERVATIONTIME)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = @HADM_ID,
   SUBMIT_WARDID = IF(@SUBMIT_WARDID='', NULL, @SUBMIT_WARDID),
   SUBMIT_CAREUNIT = IF(@SUBMIT_CAREUNIT='', NULL, @SUBMIT_CAREUNIT),
   CURR_WARDID = IF(@CURR_WARDID='', NULL, @CURR_WARDID),
   CURR_CAREUNIT = IF(@CURR_CAREUNIT='', NULL, @CURR_CAREUNIT),
   CALLOUT_WARDID = @CALLOUT_WARDID,
   CALLOUT_SERVICE = @CALLOUT_SERVICE,
   REQUEST_TELE = @REQUEST_TELE,
   REQUEST_RESP = @REQUEST_RESP,
   REQUEST_CDIFF = @REQUEST_CDIFF,
   REQUEST_MRSA = @REQUEST_MRSA,
   REQUEST_VRE = @REQUEST_VRE,
   CALLOUT_STATUS = @CALLOUT_STATUS,
   CALLOUT_OUTCOME = @CALLOUT_OUTCOME,
   DISCHARGE_WARDID = IF(@DISCHARGE_WARDID='', NULL, @DISCHARGE_WARDID),
   ACKNOWLEDGE_STATUS = @ACKNOWLEDGE_STATUS,
   CREATETIME = @CREATETIME,
   UPDATETIME = @UPDATETIME,
   ACKNOWLEDGETIME = IF(@ACKNOWLEDGETIME='', NULL, @ACKNOWLEDGETIME),
   OUTCOMETIME = @OUTCOMETIME,
   FIRSTRESERVATIONTIME = IF(@FIRSTRESERVATIONTIME='', NULL, @FIRSTRESERVATIONTIME),
   CURRENTRESERVATIONTIME = IF(@CURRENTRESERVATIONTIME='', NULL, @CURRENTRESERVATIONTIME);

-- DROP TABLE IF EXISTS CAREGIVERS;
-- CREATE TABLE CAREGIVERS_DATA_TABLE (
--    ROW_ID SMALLINT UNSIGNED NOT NULL,
--    CGID SMALLINT UNSIGNED NOT NULL,
--    LABEL VARCHAR(255),
--    DESCRIPTION VARCHAR(255));

LOAD DATA LOCAL INFILE 'CAREGIVERS_DATA_TABLE.csv' INTO TABLE CAREGIVERS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@CGID,@LABEL,@DESCRIPTION)
 SET
   ROW_ID = @ROW_ID,
   CGID = @CGID,
   LABEL = IF(@LABEL='', NULL, @LABEL),
   DESCRIPTION = IF(@DESCRIPTION='', NULL, @DESCRIPTION);

-- DROP TABLE IF EXISTS CHARTEVENTS;
-- CREATE TABLE CHARTEVENTS_DATA_TABLE (
--    ROW_ID INT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED,
--    ICUSTAY_ID MEDIUMINT UNSIGNED,
--    ITEMID MEDIUMINT UNSIGNED NOT NULL,
--    CHARTTIME DATETIME NOT NULL,
--    STORETIME DATETIME,
--    CGID SMALLINT,
--    VALUE VARCHAR(255),
--    VALUENUM VARCHAR(255),
--    UOM VARCHAR(255),
--    WARNING TINYINT UNSIGNED,
--    ERROR TINYINT UNSIGNED,
--    RESULTSTATUS VARCHAR(255),
--    STOPPED VARCHAR(255));

LOAD DATA LOCAL INFILE 'CHARTEVENTS_DATA_TABLE.csv' INTO TABLE CHARTEVENTS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@ICUSTAY_ID,@ITEMID,@CHARTTIME,@STORETIME,@CGID,@VALUE,@VALUENUM,@UOM,@WARNING,@ERROR,@RESULTSTATUS,@STOPPED)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = IF(@HADM_ID='', NULL, @HADM_ID),
   ICUSTAY_ID = IF(@ICUSTAY_ID='', NULL, @ICUSTAY_ID),
   ITEMID = @ITEMID,
   CHARTTIME = STR_TO_DATE(@CHARTTIME, '%d-%b-%Y %T'),
   STORETIME = IF(@STORETIME='', NULL, STR_TO_DATE(@STORETIME, '%d-%b-%Y %T')),
   CGID = IF(@CGID='', NULL, @CGID),
   VALUE = IF(@VALUE='', NULL, @VALUE),
   VALUENUM = IF(@VALUENUM='', NULL, @VALUENUM),
   UOM = IF(@UOM='', NULL, @UOM),
   WARNING = IF(@WARNING='', NULL, @WARNING),
   ERROR = IF(@ERROR='', NULL, @ERROR),
   RESULTSTATUS = IF(@RESULTSTATUS='', NULL, @RESULTSTATUS),
   STOPPED = IF(@STOPPED='', NULL, @STOPPED);

-- DROP TABLE IF EXISTS CPTEVENTS;
-- CREATE TABLE CPTEVENTS_DATA_TABLE (
--    ROW_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED NOT NULL,
--    COSTCENTER VARCHAR(255) NOT NULL,
--    CHARTDATE DATETIME,
--    CPT_CD VARCHAR(255) NOT NULL,
--    CPT_NUMBER MEDIUMINT UNSIGNED,
--    CPT_SUFFIX VARCHAR(255),
--    TICKET_ID_SEQ SMALLINT UNSIGNED,
--    SECTIONHEADER VARCHAR(255),
--    SUBSECTIONHEADER VARCHAR(255),
--    DESCRIPTION VARCHAR(255));

LOAD DATA LOCAL INFILE 'CPTEVENTS_DATA_TABLE.csv' INTO TABLE CPTEVENTS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@COSTCENTER,@CHARTDATE,@CPT_CD,@CPT_NUMBER,@CPT_SUFFIX,@TICKET_ID_SEQ,@SECTIONHEADER,@SUBSECTIONHEADER,@DESCRIPTION)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = @HADM_ID,
   COSTCENTER = @COSTCENTER,
   CHARTDATE = IF(@CHARTDATE='', NULL, @CHARTDATE),
   CPT_CD = @CPT_CD,
   CPT_NUMBER = IF(@CPT_NUMBER='', NULL, @CPT_NUMBER),
   CPT_SUFFIX = IF(@CPT_SUFFIX='', NULL, @CPT_SUFFIX),
   TICKET_ID_SEQ = IF(@TICKET_ID_SEQ='', NULL, @TICKET_ID_SEQ),
   SECTIONHEADER = IF(@SECTIONHEADER='', NULL, @SECTIONHEADER),
   SUBSECTIONHEADER = IF(@SUBSECTIONHEADER='', NULL, @SUBSECTIONHEADER),
   DESCRIPTION = IF(@DESCRIPTION='', NULL, @DESCRIPTION);

-- DROP TABLE IF EXISTS DATETIMEEVENTS;
-- CREATE TABLE DATETIMEEVENTS_DATA_TABLE (
--    ROW_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED,
--    ICUSTAY_ID MEDIUMINT UNSIGNED,
--    ITEMID MEDIUMINT UNSIGNED NOT NULL,
--    CHARTTIME DATETIME NOT NULL,
--    STORETIME DATETIME NOT NULL,
--    CGID SMALLINT NOT NULL,
--    VALUE DATETIME,
--    UOM VARCHAR(255) NOT NULL,
--    WARNING TINYINT UNSIGNED,
--    ERROR TINYINT UNSIGNED,
--    RESULTSTATUS VARCHAR(255),
--    STOPPED VARCHAR(255));

LOAD DATA LOCAL INFILE 'DATETIMEEVENTS_DATA_TABLE.csv' INTO TABLE DATETIMEEVENTS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@ICUSTAY_ID,@ITEMID,@CHARTTIME,@STORETIME,@CGID,@VALUE,@UOM,@WARNING,@ERROR,@RESULTSTATUS,@STOPPED)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = IF(@HADM_ID='', NULL, @HADM_ID),
   ICUSTAY_ID = IF(@ICUSTAY_ID='', NULL, @ICUSTAY_ID),
   ITEMID = @ITEMID,
   CHARTTIME = @CHARTTIME,
   STORETIME = @STORETIME,
   CGID = @CGID,
   VALUE = IF(@VALUE='', NULL, @VALUE),
   UOM = @UOM,
   WARNING = IF(@WARNING='', NULL, @WARNING),
   ERROR = IF(@ERROR='', NULL, @ERROR),
   RESULTSTATUS = IF(@RESULTSTATUS='', NULL, @RESULTSTATUS),
   STOPPED = IF(@STOPPED='', NULL, @STOPPED);

-- DROP TABLE IF EXISTS DIAGNOSES_ICD;
-- CREATE TABLE DIAGNOSES_ICD_DATA_TABLE (
--    ROW_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED NOT NULL,
--    SEQ_NUM TINYINT UNSIGNED,
--    ICD9_CODE VARCHAR(255),
--    DESCRIPTION VARCHAR(255));

LOAD DATA LOCAL INFILE 'DIAGNOSES_ICD_DATA_TABLE.csv' INTO TABLE DIAGNOSES_ICD
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@SEQ_NUM,@ICD9_CODE)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = @HADM_ID,
   SEQ_NUM = IF(@SEQ_NUM='', NULL, @SEQ_NUM),
   ICD9_CODE = IF(@ICD9_CODE='', NULL, @ICD9_CODE);

-- DROP TABLE IF EXISTS DRGCODES;
-- CREATE TABLE DRGCODES_DATA_TABLE (
--    ROW_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED NOT NULL,
--    DRG_TYPE VARCHAR(255) NOT NULL,
--    DRG_CODE SMALLINT UNSIGNED NOT NULL,
--    DESCRIPTION VARCHAR(255),
--    DRG_SEVERITY TINYINT UNSIGNED,
--    DRG_MORTALITY TINYINT UNSIGNED);

LOAD DATA LOCAL INFILE 'DRGCODES_DATA_TABLE.csv' INTO TABLE DRGCODES
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@DRG_TYPE,@DRG_CODE,@DESCRIPTION,@DRG_SEVERITY,@DRG_MORTALITY)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = @HADM_ID,
   DRG_TYPE = @DRG_TYPE,
   DRG_CODE = @DRG_CODE,
   DESCRIPTION = IF(@DESCRIPTION='', NULL, @DESCRIPTION),
   DRG_SEVERITY = IF(@DRG_SEVERITY='', NULL, @DRG_SEVERITY),
   DRG_MORTALITY = IF(@DRG_MORTALITY='', NULL, @DRG_MORTALITY);

-- DROP TABLE IF EXISTS D_CPT;
-- CREATE TABLE D_CPT_DATA_TABLE (
--    ROW_ID TINYINT UNSIGNED NOT NULL,
--    CATEGORY TINYINT UNSIGNED NOT NULL,
--    SECTIONRANGE VARCHAR(255) NOT NULL,
--    SECTIONHEADER VARCHAR(255) NOT NULL,
--    SUBSECTIONRANGE VARCHAR(255) NOT NULL,
--    SUBSECTIONHEADER VARCHAR(255) NOT NULL,
--    CODESUFFIX VARCHAR(255),
--    MINCODEINSUBSECTION MEDIUMINT UNSIGNED NOT NULL,
--    MAXCODEINSUBSECTION MEDIUMINT UNSIGNED NOT NULL);

LOAD DATA LOCAL INFILE 'D_CPT_DATA_TABLE.csv' INTO TABLE D_CPT
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@CATEGORY,@SECTIONRANGE,@SECTIONHEADER,@SUBSECTIONRANGE,@SUBSECTIONHEADER,@CODESUFFIX,@MINCODEINSUBSECTION,@MAXCODEINSUBSECTION)
 SET
   ROW_ID = @ROW_ID,
   CATEGORY = @CATEGORY,
   SECTIONRANGE = @SECTIONRANGE,
   SECTIONHEADER = @SECTIONHEADER,
   SUBSECTIONRANGE = @SUBSECTIONRANGE,
   SUBSECTIONHEADER = @SUBSECTIONHEADER,
   CODESUFFIX = IF(@CODESUFFIX='', NULL, @CODESUFFIX),
   MINCODEINSUBSECTION = @MINCODEINSUBSECTION,
   MAXCODEINSUBSECTION = @MAXCODEINSUBSECTION;

-- DROP TABLE IF EXISTS D_ICD_DIAGNOSES;
-- CREATE TABLE D_ICD_DIAGNOSES_DATA_TABLE (
--    ROW_ID SMALLINT UNSIGNED NOT NULL,
--    ICD9_CODE VARCHAR(255) NOT NULL,
--    SHORT_TITLE VARCHAR(255) NOT NULL,
--    LONG_TITLE VARCHAR(255) NOT NULL);

LOAD DATA LOCAL INFILE 'D_ICD_DIAGNOSES_DATA_TABLE.csv' INTO TABLE D_ICD_DIAGNOSES
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@ICD9_CODE,@SHORT_TITLE,@LONG_TITLE)
 SET
   ROW_ID = @ROW_ID,
   ICD9_CODE = @ICD9_CODE,
   SHORT_TITLE = @SHORT_TITLE,
   LONG_TITLE = @LONG_TITLE;

-- DROP TABLE IF EXISTS D_ICD_PROCEDURES;
-- CREATE TABLE D_ICD_PROCEDURES_DATA_TABLE (
--    ROW_ID SMALLINT UNSIGNED NOT NULL,
--    ICD9_CODE SMALLINT UNSIGNED NOT NULL,
--    SHORT_TITLE VARCHAR(255) NOT NULL,
--    LONG_TITLE VARCHAR(255) NOT NULL);

LOAD DATA LOCAL INFILE 'D_ICD_PROCEDURES_DATA_TABLE.csv' INTO TABLE D_ICD_PROCEDURES
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@ICD9_CODE,@SHORT_TITLE,@LONG_TITLE)
 SET
   ROW_ID = @ROW_ID,
   ICD9_CODE = @ICD9_CODE,
   SHORT_TITLE = @SHORT_TITLE,
   LONG_TITLE = @LONG_TITLE;

-- DROP TABLE IF EXISTS D_ITEMS;
-- CREATE TABLE D_ITEMS_DATA_TABLE (
--    ROW_ID SMALLINT UNSIGNED NOT NULL,
--    ITEMID MEDIUMINT UNSIGNED NOT NULL,
--    LABEL VARCHAR(255),
--    ABBREVIATION VARCHAR(255),
--    DBSOURCE VARCHAR(255) NOT NULL,
--    LINKSTO VARCHAR(255) NOT NULL,
--    CODE VARCHAR(255),
--    CATEGORY VARCHAR(255),
--    UNITNAME VARCHAR(255),
--    PARAM_TYPE VARCHAR(255),
--    LOWNORMALVALUE SMALLINT,
--    HIGHNORMALVALUE VARCHAR(255));

LOAD DATA LOCAL INFILE 'D_ITEMS_DATA_TABLE.csv' INTO TABLE D_ITEMS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@ITEMID,@LABEL,@ABBREVIATION,@DBSOURCE,@LINKSTO,@CODE,@CATEGORY,@UNITNAME,@PARAM_TYPE,@LOWNORMALVALUE,@HIGHNORMALVALUE)
 SET
   ROW_ID = @ROW_ID,
   ITEMID = @ITEMID,
   LABEL = IF(@LABEL='', NULL, @LABEL),
   ABBREVIATION = IF(@ABBREVIATION='', NULL, @ABBREVIATION),
   DBSOURCE = @DBSOURCE,
   LINKSTO = @LINKSTO,
   CODE = IF(@CODE='', NULL, @CODE),
   CATEGORY = IF(@CATEGORY='', NULL, @CATEGORY),
   UNITNAME = IF(@UNITNAME='', NULL, @UNITNAME),
   PARAM_TYPE = IF(@PARAM_TYPE='', NULL, @PARAM_TYPE),
   LOWNORMALVALUE = IF(@LOWNORMALVALUE='', NULL, @LOWNORMALVALUE),
   HIGHNORMALVALUE = IF(@HIGHNORMALVALUE='', NULL, @HIGHNORMALVALUE);

-- DROP TABLE IF EXISTS D_LABITEMS;
-- CREATE TABLE D_LABITEMS_DATA_TABLE (
--    ROW_ID SMALLINT UNSIGNED NOT NULL,
--    ITEMID SMALLINT UNSIGNED NOT NULL,
--    LABEL VARCHAR(255) NOT NULL,
--    FLUID VARCHAR(255) NOT NULL,
--    CATEGORY VARCHAR(255) NOT NULL,
--    LOINC_CODE VARCHAR(255));

LOAD DATA LOCAL INFILE 'D_LABITEMS_DATA_TABLE.csv' INTO TABLE D_LABITEMS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@ITEMID,@LABEL,@FLUID,@CATEGORY,@LOINC_CODE)
 SET
   ROW_ID = @ROW_ID,
   ITEMID = @ITEMID,
   LABEL = @LABEL,
   FLUID = @FLUID,
   CATEGORY = @CATEGORY,
   LOINC_CODE = IF(@LOINC_CODE='', NULL, @LOINC_CODE);

-- DROP TABLE IF EXISTS ICUSTAYS;
-- CREATE TABLE ICUSTAYS_DATA_TABLE (
--    ROW_ID SMALLINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED NOT NULL,
--    ICUSTAY_ID MEDIUMINT UNSIGNED NOT NULL,
--    DBSOURCE VARCHAR(255) NOT NULL,
--    FIRST_CAREUNIT VARCHAR(255) NOT NULL,
--    LAST_CAREUNIT VARCHAR(255) NOT NULL,
--    FIRST_WARDID TINYINT UNSIGNED NOT NULL,
--    LAST_WARDID TINYINT UNSIGNED NOT NULL,
--    INTIME DATETIME NOT NULL,
--    OUTTIME DATETIME,
--    LOS VARCHAR(255));

LOAD DATA LOCAL INFILE 'ICUSTAYS_DATA_TABLE.csv' INTO TABLE ICUSTAYS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@ICUSTAY_ID,@DBSOURCE,@FIRST_CAREUNIT,@LAST_CAREUNIT,@FIRST_WARDID,@LAST_WARDID,@INTIME,@OUTTIME,@LOS)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = @HADM_ID,
   ICUSTAY_ID = @ICUSTAY_ID,
   DBSOURCE = @DBSOURCE,
   FIRST_CAREUNIT = @FIRST_CAREUNIT,
   LAST_CAREUNIT = @LAST_CAREUNIT,
   FIRST_WARDID = @FIRST_WARDID,
   LAST_WARDID = @LAST_WARDID,
   INTIME = @INTIME,
   OUTTIME = IF(@OUTTIME='', NULL, @OUTTIME),
   LOS = IF(@LOS='', NULL, @LOS);

-- DROP TABLE IF EXISTS INPUTEVENTS_CV;
-- CREATE TABLE INPUTEVENTS_CV_DATA_TABLE (
--    ROW_ID INT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED,
--    ICUSTAY_ID MEDIUMINT UNSIGNED,
--    CHARTTIME DATETIME NOT NULL,
--    ITEMID MEDIUMINT UNSIGNED NOT NULL,
--    AMOUNT VARCHAR(255),
--    AMOUNTUOM VARCHAR(255),
--    RATE VARCHAR(255),
--    RATEUOM VARCHAR(255),
--    STORETIME DATETIME NOT NULL,
--    CGID SMALLINT,
--    ORDERID INT UNSIGNED,
--    LINKORDERID INT UNSIGNED,
--    STOPPED VARCHAR(255),
--    NEWBOTTLE TINYINT UNSIGNED,
--    ORIGINALAMOUNT VARCHAR(255),
--    ORIGINALAMOUNTUOM VARCHAR(255),
--    ORIGINALROUTE VARCHAR(255),
--    ORIGINALRATE VARCHAR(255),
--    ORIGINALRATEUOM VARCHAR(255),
--    ORIGINALSITE VARCHAR(255));

LOAD DATA LOCAL INFILE 'INPUTEVENTS_CV_DATA_TABLE.csv' INTO TABLE INPUTEVENTS_CV
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@ICUSTAY_ID,@CHARTTIME,@ITEMID,@AMOUNT,@AMOUNTUOM,@RATE,@RATEUOM,@STORETIME,@CGID,@ORDERID,@LINKORDERID,@ORDERCATEGORYNAME,@SECONDARYORDERCATEGORYNAME,@ORDERCOMPONENTTYPEDESCRIPTION,@ORDERCATEGORYDESCRIPTION,@PATIENTWEIGHT,@TOTALVOLUME,@TOTALVOLUMEUOM,@STATUSDESCRIPTION,@STOPPED,@NEWBOTTLE,@ISOPENBAG,@CONTINUEINNEXTDEPT,@CANCELREASON,@COMMENTS_STATUS,@COMMENTS_TITLE,@COMMENTS_DATE,@ORIGINALCHARTTIME,@ORIGINALAMOUNT,@ORIGINALAMOUNTUOM,@ORIGINALROUTE,@ORIGINALRATE,@ORIGINALRATEUOM,@ORIGINALSITE)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = IF(@HADM_ID='', NULL, @HADM_ID),
   ICUSTAY_ID = IF(@ICUSTAY_ID='', NULL, @ICUSTAY_ID),
   CHARTTIME = @CHARTTIME,
   ITEMID = @ITEMID,
   AMOUNT = IF(@AMOUNT='', NULL, @AMOUNT),
   AMOUNTUOM = IF(@AMOUNTUOM='', NULL, @AMOUNTUOM),
   RATE = IF(@RATE='', NULL, @RATE),
   RATEUOM = IF(@RATEUOM='', NULL, @RATEUOM),
   STORETIME = @STORETIME,
   CGID = IF(@CGID='', NULL, @CGID),
   ORDERID = IF(@ORDERID='', NULL, @ORDERID),
   LINKORDERID = IF(@LINKORDERID='', NULL, @LINKORDERID),
   STOPPED = IF(@STOPPED='', NULL, @STOPPED),
   NEWBOTTLE = IF(@NEWBOTTLE='', NULL, @NEWBOTTLE),
   ORIGINALAMOUNT = IF(@ORIGINALAMOUNT='', NULL, @ORIGINALAMOUNT),
   ORIGINALAMOUNTUOM = IF(@ORIGINALAMOUNTUOM='', NULL, @ORIGINALAMOUNTUOM),
   ORIGINALROUTE = IF(@ORIGINALROUTE='', NULL, @ORIGINALROUTE),
   ORIGINALRATE = IF(@ORIGINALRATE='', NULL, @ORIGINALRATE),
   ORIGINALRATEUOM = IF(@ORIGINALRATEUOM='', NULL, @ORIGINALRATEUOM),
   ORIGINALSITE = IF(@ORIGINALSITE='', NULL, @ORIGINALSITE);


 -- DROP TABLE IF EXISTS INPUTEVENTS_MV;
 -- CREATE TABLE INPUTEVENTS_MV (
 --    ROW_ID INT UNSIGNED NOT NULL,
 --    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
 --    HADM_ID MEDIUMINT UNSIGNED,
 --    ICUSTAY_ID MEDIUMINT UNSIGNED,
 --    STARTTIME DATETIME,
 --    ENDTIME DATETIME NOT NULL,
 --    ITEMID MEDIUMINT UNSIGNED NOT NULL,
 --    AMOUNT VARCHAR(255),
 --    AMOUNTUOM VARCHAR(255),
 --    RATE VARCHAR(255),
 --    RATEUOM VARCHAR(255),
 --    STORETIME DATETIME NOT NULL,
 --    CGID SMALLINT,
 --    ORDERID INT UNSIGNED,
 --    LINKORDERID INT UNSIGNED,
 --    ORDERCATEGORYNAME VARCHAR(255),
 --    SECONDARYORDERCATEGORYNAME VARCHAR(255),
 --    ORDERCOMPONENTTYPEDESCRIPTION VARCHAR(255),
 --    ORDERCATEGORYDESCRIPTION VARCHAR(255),
 --    PATIENTWEIGHT MEDIUMINT UNSIGNED,
 --    TOTALAMOUNT VARCHAR(255),
 --    TOTALAMOUNTUOM VARCHAR(255),
 --    ISOPENBAG TINYINT UNSIGNED,
 --    CONTINUEINNEXTDEPT TINYINT UNSIGNED,
 --    CANCELREASON TINYINT UNSIGNED,
 --    STATUSDESCRIPTION VARCHAR(255),
 --    COMMENTS_EDITEDBY VARCHAR(255),
 --    COMMENTS_CANCELEDBY VARCHAR(255),
 --    COMMENTS_DATE DATETIME,
 --    ORIGINALAMOUNT VARCHAR(255),
 --    ORIGINALRATE VARCHAR(255));

 LOAD DATA LOCAL INFILE 'INPUTEVENTS_MV_DATA_TABLE.csv' INTO TABLE INPUTEVENTS_MV
    FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
    LINES TERMINATED BY '\n'
    IGNORE 1 LINES
    (@ROW_ID,@SUBJECT_ID,@HADM_ID,@ICUSTAY_ID,@STARTTIME,@ENDTIME,@ITEMID,@AMOUNT,@AMOUNTUOM,@RATE,@RATEUOM,@STORETIME,@CGID,@ORDERID,@LINKORDERID,@ORDERCATEGORYNAME,@SECONDARYORDERCATEGORYNAME,@ORDERCOMPONENTTYPEDESCRIPTION,@ORDERCATEGORYDESCRIPTION,@PATIENTWEIGHT,@TOTALAMOUNT,@TOTALAMOUNTUOM,@ISOPENBAG,@CONTINUEINNEXTDEPT,@CANCELREASON,@STATUSDESCRIPTION,@COMMENTS_EDITEDBY,@COMMENTS_CANCELEDBY,@COMMENTS_DATE,@ORIGINALAMOUNT,@ORIGINALRATE)
  SET
    ROW_ID = @ROW_ID,
    SUBJECT_ID = @SUBJECT_ID,
    HADM_ID = IF(@HADM_ID='', NULL, @HADM_ID),
    ICUSTAY_ID = IF(@ICUSTAY_ID='', NULL, @ICUSTAY_ID),
    STARTTIME = IF(@STARTTIME='', NULL, @STARTTIME),
    ENDTIME = @ENDTIME,
    ITEMID = @ITEMID,
    AMOUNT = IF(@AMOUNT='', NULL, @AMOUNT),
    AMOUNTUOM = IF(@AMOUNTUOM='', NULL, @AMOUNTUOM),
    RATE = IF(@RATE='', NULL, @RATE),
    RATEUOM = IF(@RATEUOM='', NULL, @RATEUOM),
    STORETIME = @STORETIME,
    CGID = IF(@CGID='', NULL, @CGID),
    ORDERID = IF(@ORDERID='', NULL, @ORDERID),
    LINKORDERID = IF(@LINKORDERID='', NULL, @LINKORDERID),
    ORDERCATEGORYNAME = IF(@ORDERCATEGORYNAME='', NULL, @ORDERCATEGORYNAME),
    SECONDARYORDERCATEGORYNAME = IF(@SECONDARYORDERCATEGORYNAME='', NULL, @SECONDARYORDERCATEGORYNAME),
    ORDERCOMPONENTTYPEDESCRIPTION = IF(@ORDERCOMPONENTTYPEDESCRIPTION='', NULL, @ORDERCOMPONENTTYPEDESCRIPTION),
    ORDERCATEGORYDESCRIPTION = IF(@ORDERCATEGORYDESCRIPTION='', NULL, @ORDERCATEGORYDESCRIPTION),
    PATIENTWEIGHT = IF(@PATIENTWEIGHT='', NULL, @PATIENTWEIGHT),
    TOTALAMOUNT = IF(@TOTALAMOUNT='', NULL, @TOTALAMOUNT),
    TOTALAMOUNTUOM = IF(@TOTALAMOUNTUOM='', NULL, @TOTALAMOUNTUOM),
    ISOPENBAG = IF(@ISOPENBAG='', NULL, @ISOPENBAG),
    CONTINUEINNEXTDEPT = IF(@CONTINUEINNEXTDEPT='', NULL, @CONTINUEINNEXTDEPT),
    CANCELREASON = IF(@CANCELREASON='', NULL, @CANCELREASON),
    STATUSDESCRIPTION = IF(@STATUSDESCRIPTION='', NULL, @STATUSDESCRIPTION),
    COMMENTS_EDITEDBY = IF(@COMMENTS_EDITEDBY='', NULL, @COMMENTS_EDITEDBY),
    COMMENTS_CANCELEDBY = IF(@COMMENTS_CANCELEDBY='', NULL, @COMMENTS_CANCELEDBY),
    COMMENTS_DATE = IF(@COMMENTS_DATE='', NULL, @COMMENTS_DATE),
    ORIGINALAMOUNT = IF(@ORIGINALAMOUNT='', NULL, @ORIGINALAMOUNT),
    ORIGINALRATE = IF(@ORIGINALRATE='', NULL, @ORIGINALRATE);

-- DROP TABLE IF EXISTS LABEVENTS;
-- CREATE TABLE LABEVENTS_DATA_TABLE (
--    ROW_ID INT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED,
--    ITEMID SMALLINT UNSIGNED NOT NULL,
--    CHARTTIME DATETIME NOT NULL,
--    VALUE VARCHAR(255),
--    VALUENUM VARCHAR(255),
--    UOM VARCHAR(255),
--    FLAG VARCHAR(255));

LOAD DATA LOCAL INFILE 'LABEVENTS_DATA_TABLE.csv' INTO TABLE LABEVENTS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@ITEMID,@CHARTTIME,@VALUE,@VALUENUM,@UOM,@FLAG)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = IF(@HADM_ID='', NULL, @HADM_ID),
   ITEMID = @ITEMID,
   CHARTTIME = @CHARTTIME,
   VALUE = IF(@VALUE='', NULL, @VALUE),
   VALUENUM = IF(@VALUENUM='', NULL, @VALUENUM),
   UOM = IF(@UOM='', NULL, @UOM),
   FLAG = IF(@FLAG='', NULL, @FLAG);

-- DROP TABLE IF EXISTS MICROBIOLOGYEVENTS;
-- CREATE TABLE MICROBIOLOGYEVENTS_DATA_TABLE (
--    ROW_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED,
--    CHARTDATE DATETIME NOT NULL,
--    CHARTTIME DATETIME,
--    SPEC_ITEMID MEDIUMINT UNSIGNED,
--    SPEC_TYPE_CD VARCHAR(255) NOT NULL,
--    SPEC_TYPE_DESC VARCHAR(255) NOT NULL,
--    ORG_ITEMID MEDIUMINT UNSIGNED,
--    ORG_CD SMALLINT UNSIGNED NOT NULL,
--    ORG_NAME VARCHAR(255) NOT NULL,
--    ISOLATE_NUM TINYINT UNSIGNED NOT NULL,
--    AB_ITEMID MEDIUMINT UNSIGNED,
--    AB_CD TINYINT UNSIGNED,
--    AB_NAME VARCHAR(255),
--    DILUTION_TEXT VARCHAR(255),
--    DILUTION_COMPARISON VARCHAR(255),
--    DILUTION_VALUE SMALLINT UNSIGNED,
--    INTERPRETATION VARCHAR(255));

LOAD DATA LOCAL INFILE 'MICROBIOLOGYEVENTS_DATA_TABLE.csv' INTO TABLE MICROBIOLOGYEVENTS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@CHARTDATE,@CHARTTIME,@SPEC_ITEMID,@SPEC_TYPE_CD,@SPEC_TYPE_DESC,@ORG_ITEMID,@ORG_CD,@ORG_NAME,@ISOLATE_NUM,@AB_ITEMID,@AB_CD,@AB_NAME,@DILUTION_TEXT,@DILUTION_COMPARISON,@DILUTION_VALUE,@INTERPRETATION)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = IF(@HADM_ID='', NULL, @HADM_ID),
   CHARTDATE = @CHARTDATE,
   CHARTTIME = IF(@CHARTTIME='', NULL, @CHARTTIME),
   SPEC_ITEMID = IF(@SPEC_ITEMID='', NULL, @SPEC_ITEMID),
   SPEC_TYPE_CD = @SPEC_TYPE_CD,
   SPEC_TYPE_DESC = @SPEC_TYPE_DESC,
   ORG_ITEMID = IF(@ORG_ITEMID='', NULL, @ORG_ITEMID),
   ORG_CD = @ORG_CD,
   ORG_NAME = @ORG_NAME,
   ISOLATE_NUM = @ISOLATE_NUM,
   AB_ITEMID = IF(@AB_ITEMID='', NULL, @AB_ITEMID),
   AB_CD = IF(@AB_CD='', NULL, @AB_CD),
   AB_NAME = IF(@AB_NAME='', NULL, @AB_NAME),
   DILUTION_TEXT = IF(@DILUTION_TEXT='', NULL, @DILUTION_TEXT),
   DILUTION_COMPARISON = IF(@DILUTION_COMPARISON='', NULL, @DILUTION_COMPARISON),
   DILUTION_VALUE = IF(@DILUTION_VALUE='', NULL, @DILUTION_VALUE),
   INTERPRETATION = IF(@INTERPRETATION='', NULL, @INTERPRETATION);

-- DROP TABLE IF EXISTS NOTEEVENTS;
-- CREATE TABLE NOTEEVENTS_DATA_TABLE (
--    ROW_ID MEDIUMINT UNSIGNED NOT NULL,
--    RECORD_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED,
--    CHARTDATE DATETIME,
--    CHARTTIME DATETIME,
--    STORETIME DATETIME,
--    CATEGORY VARCHAR(255) NOT NULL,
--    DESCRIPTION VARCHAR(255) NOT NULL,
--    CGID SMALLINT UNSIGNED,
--    ISERROR TINYINT UNSIGNED,
--    TEXT TEXT);

LOAD DATA LOCAL INFILE 'NOTEEVENTS_DATA_TABLE.csv' INTO TABLE NOTEEVENTS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@RECORD_ID,@SUBJECT_ID,@HADM_ID,@CHARTDATE,@CHARTTIME,@STORETIME,@CATEGORY,@DESCRIPTION,@CGID,@ISERROR,@TEXT)
 SET
   ROW_ID = @ROW_ID,
   RECORD_ID = @RECORD_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = IF(@HADM_ID='', NULL, @HADM_ID),
   CHARTDATE = @CHARTDATE,
   CHARTTIME = IF(@CHARTTIME='', NULL, @CHARTTIME),
   STORETIME = IF(@STORETIME='', NULL, @STORETIME),
   CATEGORY = @CATEGORY,
   DESCRIPTION = @DESCRIPTION,
   CGID = IF(@CGID='', NULL, @CGID),
   ISERROR = IF(@ISERROR='', NULL, @ISERROR),
   TEXT = IF(@TEXT='', NULL, @TEXT);

-- DROP TABLE IF EXISTS PATIENTS;
-- CREATE TABLE PATIENTS_DATA_TABLE (
--    ROW_ID SMALLINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    GENDER VARCHAR(255) NOT NULL,
--    DOB VARCHAR(255) NOT NULL,
--    DOD VARCHAR(255) NOT NULL,
--    DOD_HOSP DATETIME,
--    DOD_SSN DATETIME,
--    HOSPITAL_EXPIRE_FLAG VARCHAR(255) NOT NULL);

LOAD DATA LOCAL INFILE 'PATIENTS_DATA_TABLE.csv' INTO TABLE PATIENTS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@GENDER,@DOB,@DOD,@DOD_HOSP,@DOD_SSN,@HOSPITAL_EXPIRE_FLAG)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   GENDER = @GENDER,
   DOB = @DOB,
   DOD = @DOD,
   DOD_HOSP = IF(@DOD_HOSP='', NULL, @DOD_HOSP),
   DOD_SSN = IF(@DOD_SSN='', NULL, @DOD_SSN),
   HOSPITAL_EXPIRE_FLAG = @HOSPITAL_EXPIRE_FLAG;

-- DROP TABLE IF EXISTS PRESCRIPTIONS;
-- CREATE TABLE PRESCRIPTIONS_DATA_TABLE (
--    ROW_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED NOT NULL,
--    ICUSTAY_ID MEDIUMINT UNSIGNED,
--    STARTTIME DATETIME,
--    ENDTIME DATETIME,
--    DRUG_TYPE VARCHAR(255) NOT NULL,
--    DRUG VARCHAR(255),
--    DRUG_NAME_POE VARCHAR(255),
--    DRUG_NAME_GENERIC VARCHAR(255),
--    FORMULARY_DRUG_CD VARCHAR(255),
--    GSN VARCHAR(255),
--    NDC BIGINT UNSIGNED,
--    PROD_STRENGTH VARCHAR(255),
--    DOSE_VAL_RX VARCHAR(255),
--    DOSE_UNIT_RX VARCHAR(255),
--    FORM_VAL_DISP VARCHAR(255),
--    FORM_UNIT_DISP VARCHAR(255),
--    ROUTE VARCHAR(255));

LOAD DATA LOCAL INFILE 'PRESCRIPTIONS_DATA_TABLE.csv' INTO TABLE PRESCRIPTIONS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@ICUSTAY_ID,@STARTDATE,@ENDDATE,@DRUG_TYPE,@DRUG,@DRUG_NAME_POE,@DRUG_NAME_GENERIC,@FORMULARY_DRUG_CD,@GSN,@NDC,@PROD_STRENGTH,@DOSE_VAL_RX,@DOSE_UNIT_RX,@FORM_VAL_DISP,@FORM_UNIT_DISP,@ROUTE)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = @HADM_ID,
   ICUSTAY_ID = IF(@ICUSTAY_ID='', NULL, @ICUSTAY_ID),
   STARTDATE = IF(@STARTDATE='', NULL, @STARTDATE),
   ENDDATE = IF(@ENDDATE='', NULL, @ENDDATE),
   DRUG_TYPE = @DRUG_TYPE,
   DRUG = IF(@DRUG='', NULL, @DRUG),
   DRUG_NAME_POE = IF(@DRUG_NAME_POE='', NULL, @DRUG_NAME_POE),
   DRUG_NAME_GENERIC = IF(@DRUG_NAME_GENERIC='', NULL, @DRUG_NAME_GENERIC),
   FORMULARY_DRUG_CD = IF(@FORMULARY_DRUG_CD='', NULL, @FORMULARY_DRUG_CD),
   GSN = IF(@GSN='', NULL, @GSN),
   NDC = IF(@NDC='', NULL, @NDC),
   PROD_STRENGTH = IF(@PROD_STRENGTH='', NULL, @PROD_STRENGTH),
   DOSE_VAL_RX = IF(@DOSE_VAL_RX='', NULL, @DOSE_VAL_RX),
   DOSE_UNIT_RX = IF(@DOSE_UNIT_RX='', NULL, @DOSE_UNIT_RX),
   FORM_VAL_DISP = IF(@FORM_VAL_DISP='', NULL, @FORM_VAL_DISP),
   FORM_UNIT_DISP = IF(@FORM_UNIT_DISP='', NULL, @FORM_UNIT_DISP),
   ROUTE = IF(@ROUTE='', NULL, @ROUTE);

-- DROP TABLE IF EXISTS PROCEDUREEVENTS_MV;
--  CREATE TABLE PROCEDUREEVENTS_MV_DATA_TABLE
--   (	ROW_ID INT,
--   SUBJECT_ID INT,
--   HADM_ID INT
--   ICUSTAY_ID INT,
--   STARTTIME DATETIME,
--   ENDTIME DATETIME,
--   ITEMID INT,
--   VALUE DOUBLE PRECISION,
--   VALUEUOM VARCHAR(30),
--   LOCATION VARCHAR(30),
--   LOCATIONCATEGORY VARCHAR(30),
--   STORETIME DATETIME,
--   CGID INT,
--   ORDERID INT,
--   LINKORDERID INT,
--   ORDERCATEGORYNAME VARCHAR(100),
--   SECONDARYORDERCATEGORYNAME VARCHAR(100),
--   ORDERCATEGORYDESCRIPTION VARCHAR(50),
--   ISOPENBAG SMALLINT,
--   CONTINUEINNEXTDEPT SMALLINT,
--   CANCELREASON SMALLINT,
--   STATUSDESCRIPTION VARCHAR(30),
--   COMMENTS_EDITEDBY VARCHAR(30),
--   COMMENTS_CANCELEDBY VARCHAR(30),
--   COMMENTS_DATE DATETIME);

  LOAD DATA LOCAL INFILE 'PROCEDUREEVENTS_MV_DATA_TABLE.csv' INTO TABLE PROCEDUREEVENTS_MV
     FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
     LINES TERMINATED BY '\n'
     IGNORE 1 LINES
     (@ROW_ID,@SUBJECT_ID,@HADM_ID,@ICUSTAY_ID,@STARTTIME,@ENDTIME,@ITEMID,@VALUE,@VALUEUOM,@STORETIME,@CGID,@ORDERID,@LINKORDERID,@ORDERCATEGORYNAME,@SECONDARYORDERCATEGORYNAME,@ORDERCATEGORYDESCRIPTION,,@ISOPENBAG,@CONTINUEINNEXTDEPT,@CANCELREASON,@STATUSDESCRIPTION,@COMMENTS_EDITEDBY,@COMMENTS_CANCELEDBY,@COMMENTS_DATE)
   SET
     ROW_ID = @ROW_ID,
     SUBJECT_ID = @SUBJECT_ID,
     HADM_ID = IF(@HADM_ID='', NULL, @HADM_ID),
     ICUSTAY_ID = IF(@ICUSTAY_ID='', NULL, @ICUSTAY_ID),
     STARTTIME = IF(@STARTTIME='', NULL, @STARTTIME),
     ENDTIME = @ENDTIME,
     ITEMID = @ITEMID,
     VALUE = IF(@VALUE='', NULL, @VALUE),
     VALUEUOM = IF(@VALUEUOM='', NULL, @AVALUEUOM),
     STORETIME = @STORETIME,
     CGID = IF(@CGID='', NULL, @CGID),
     ORDERID = IF(@ORDERID='', NULL, @ORDERID),
     LINKORDERID = IF(@LINKORDERID='', NULL, @LINKORDERID),
     ORDERCATEGORYNAME = IF(@ORDERCATEGORYNAME='', NULL, @ORDERCATEGORYNAME),
     SECONDARYORDERCATEGORYNAME = IF(@SECONDARYORDERCATEGORYNAME='', NULL, @SECONDARYORDERCATEGORYNAME),
     ORDERCATEGORYDESCRIPTION = IF(@ORDERCATEGORYDESCRIPTION='', NULL, @ORDERCATEGORYDESCRIPTION),
     ISOPENBAG = IF(@ISOPENBAG='', NULL, @ISOPENBAG),
     CONTINUEINNEXTDEPT = IF(@CONTINUEINNEXTDEPT='', NULL, @CONTINUEINNEXTDEPT),
     CANCELREASON = IF(@CANCELREASON='', NULL, @CANCELREASON),
     STATUSDESCRIPTION = IF(@STATUSDESCRIPTION='', NULL, @STATUSDESCRIPTION),
     COMMENTS_EDITEDBY = IF(@COMMENTS_EDITEDBY='', NULL, @COMMENTS_EDITEDBY),
     COMMENTS_CANCELEDBY = IF(@COMMENTS_CANCELEDBY='', NULL, @COMMENTS_CANCELEDBY),
     COMMENTS_DATE = IF(@COMMENTS_DATE='', NULL, @COMMENTS_DATE);


-- DROP TABLE IF EXISTS PROCEDURES_ICD;
-- CREATE TABLE PROCEDURES_ICD_DATA_TABLE (
--    ROW_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED NOT NULL,
--    SEQ_NUM TINYINT UNSIGNED NOT NULL,
--    ICD9_CODE SMALLINT UNSIGNED NOT NULL);

LOAD DATA LOCAL INFILE 'PROCEDURES_ICD_DATA_TABLE.csv' INTO TABLE PROCEDURES_ICD
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@SEQ_NUM,@ICD9_CODE)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = @HADM_ID,
   SEQ_NUM = @SEQ_NUM,
   ICD9_CODE = @ICD9_CODE;

-- DROP TABLE IF EXISTS SERVICES;
-- CREATE TABLE SERVICES_DATA_TABLE (
--    ROW_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED NOT NULL,
--    TRANSFERTIME DATETIME NOT NULL,
--    PREV_SERVICE VARCHAR(255),
--    CURR_SERVICE VARCHAR(255) NOT NULL);

LOAD DATA LOCAL INFILE 'SERVICES_DATA_TABLE.csv' INTO TABLE SERVICES
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@TRANSFERTIME,@PREV_SERVICE,@CURR_SERVICE)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = @HADM_ID,
   TRANSFERTIME = @TRANSFERTIME,
   PREV_SERVICE = IF(@PREV_SERVICE='', NULL, @PREV_SERVICE),
   CURR_SERVICE = @CURR_SERVICE;

-- DROP TABLE IF EXISTS TRANSFERS;
-- CREATE TABLE TRANSFERS_DATA_TABLE (
--    ROW_ID MEDIUMINT UNSIGNED NOT NULL,
--    SUBJECT_ID MEDIUMINT UNSIGNED NOT NULL,
--    HADM_ID MEDIUMINT UNSIGNED NOT NULL,
--    ICUSTAY_ID MEDIUMINT UNSIGNED,
--    DBSOURCE VARCHAR(255) NOT NULL,
--    EVENTTYPE VARCHAR(255),
--    PREV_CAREUNIT VARCHAR(255),
--    CURR_CAREUNIT VARCHAR(255),
--    PREV_WARDID TINYINT UNSIGNED,
--    CURR_WARDID TINYINT UNSIGNED,
--    INTIME DATETIME,
--    OUTTIME DATETIME,
--    LOS VARCHAR(255));

LOAD DATA LOCAL INFILE 'TRANSFERS_DATA_TABLE.csv' INTO TABLE TRANSFERS
   FIELDS TERMINATED BY ',' ESCAPED BY '\\' OPTIONALLY ENCLOSED BY '"'
   LINES TERMINATED BY '\n'
   IGNORE 1 LINES
   (@ROW_ID,@SUBJECT_ID,@HADM_ID,@ICUSTAY_ID,@DBSOURCE,@EVENTTYPE,@PREV_CAREUNIT,@CURR_CAREUNIT,@PREV_WARDID,@CURR_WARDID,@INTIME,@OUTTIME,@LOS)
 SET
   ROW_ID = @ROW_ID,
   SUBJECT_ID = @SUBJECT_ID,
   HADM_ID = @HADM_ID,
   ICUSTAY_ID = IF(@ICUSTAY_ID='', NULL, @ICUSTAY_ID),
   DBSOURCE = @DBSOURCE,
   EVENTTYPE = IF(@EVENTTYPE='', NULL, @EVENTTYPE),
   PREV_CAREUNIT = IF(@PREV_CAREUNIT='', NULL, @PREV_CAREUNIT),
   CURR_CAREUNIT = IF(@CURR_CAREUNIT='', NULL, @CURR_CAREUNIT),
   PREV_WARDID = IF(@PREV_WARDID='', NULL, @PREV_WARDID),
   CURR_WARDID = IF(@CURR_WARDID='', NULL, @CURR_WARDID),
   INTIME = IF(@INTIME='', NULL, @INTIME),
   OUTTIME = IF(@OUTTIME='', NULL, @OUTTIME),
   LOS = IF(@LOS='', NULL, @LOS);
